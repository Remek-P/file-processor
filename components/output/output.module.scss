@import "../../styles/variables/variables";
@import "../../styles/variables/breakpoints";

//Output has NOT been chosen yet, multiple suggestions are being displayed.

.search {

    &Suggestion {

      &ShortListTable {
        th > *, td > * {
          overflow: hidden;
          text-align: left;

          cursor: pointer;
        }
      }

      //prevents long text from overflowing
      &ShortListTable {
        white-space: nowrap;
        max-width: 300px !important;
        text-overflow: ellipsis;
      }

      &ShortListTable {
        position: relative;

        &Header {
          position: sticky;
          top: 0;
          z-index: 2;
        }
      }
    }
}

.grid {
  &Container {
    position: relative;
    overflow: hidden;
  }
  
  &HeaderContainer {
    position: sticky;
    top: 0;
    z-index: 2;
    overflow: hidden;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  &Header {
    display: flex;
    position: sticky;
    top: 0;
    z-index: 2;
    width: fit-content;


    & > div {
      overflow: hidden;
      cursor: pointer;
    }
  }
  
  &Cell {
    overflow: hidden;
    border-bottom: 1px solid #e0e0e0;
    cursor: pointer;
  }
}


.outputLoader {
  margin: 0 auto;
}

//Output has been chosen by the user

//-------------------------
//User needs to pick ID

.pickID {

  &Li {
    width: 100%;
    height: 100%;
    cursor: pointer;
  }
}

//-------------------------
//Search input
.outputSearchContainer {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 5px;
}

.outputSearch {
  width: fit-content;
  padding: 0 5px;
}

.outputDeleteOutput {
  cursor: pointer;
}

.select {
  display: flex;
  align-items: center;
  text-align: center;
  padding-block: max(20%, 80px);
}

//-------------------------
//Displaying chosen output

.grid {
  display: grid;
  grid-template-columns: $gridBreakpoint170;
  align-items: stretch;
  justify-items: stretch;
  gap: 6px;

  margin: 5% auto 12px;
  width: 100%;
  //overflow: hidden;

  & h4 {
    padding-bottom: 2%;
  }

  @media (min-width: $breakpoint515) {
    grid-template-columns: $gridBreakpoint515;
  }

  @media (min-width: $breakpoint600) {
    grid-template-columns: $gridBreakpoint600;
    gap: 8px;
  }

  @media (min-width: $breakpoint900) {
    grid-template-columns: $gridBreakpoint900;
    width: 95%;
  }
}

.optionContainer {
  display: flex;
  flex-direction: column;

  & > :last-child {
    margin-top: auto;
  }
}

//TODO: text-overflow: ellipsis; is not working
.subContainer {
  display: flex;
  gap: 10px;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
  overflow: hidden;


  & > * {
    text-overflow: ellipsis;
  }

  & > p {
    text-align: end;
  }

  @media (max-width: 550px) {
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    gap: 2px;
  }
}

//Show-date
.showDate {
  &Modal {
    &Container {
      display: flex;
      align-items: flex-end;
      gap: 15px;
      z-index: 10;
    }
  }
}

//-------------------------
//Displaying tiles layout

.topSection {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  flex-wrap: wrap;
  padding-bottom: 15px;

  & > h4 {
    overflow: hidden;
    overflow-wrap: break-word;
    hyphens: auto;
  }


  @media (max-width: $breakpoint600) {
    margin-bottom: 8px;
  }
}

.numberButtons {
  display: flex;
  justify-content: flex-end;
  flex-grow: 1;
  flex-wrap: wrap;

  @media (max-width: $breakpoint600) {
    align-self: flex-end;
  }
}
//TODO: filling
.iconFill {
  fill: blue !important;
}

.toggleContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-left: -15px; //offsetting padding from the button
}

//Toggle's label is displayed first, to suit the layout.
.zeroToggle * span {
  order: -1;
}