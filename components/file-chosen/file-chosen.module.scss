@import "../../styles/variables/variables";
@import "../../styles/variables/breakpoints";

//--------------------------
//Outputs containers styling

.sectionContainer {

  @media (min-width: $breakpoint600) {
    padding-top: 10px;
  }
}

.optionContainer {
  position: relative; //for the actions menu
}

.outputsContainer {
  display: grid;
  grid-template-columns: $gridBreakpoint170;
  gap: 4px;

  @media (min-width: $breakpoint515) {
    grid-template-columns: $gridBreakpoint515;
  }

  @media (min-width: $breakpoint600) {
    grid-template-columns: $gridBreakpoint600;
    gap: 12px;
  }

  @media (min-width: $breakpoint900) {
    grid-template-columns: $gridBreakpoint900;
  }
}

.outputContainer {
  display: flex;
  flex-direction: column;
}
//--------------------------
//Styling the action button in case the output container have a sibling

.sectionContainer:has( > .outputsContainer > .outputContainer:only-child) > .menuContainer {
  @media (min-width: $breakpoint380) {
    top: $actionsMenuHigh;
  }
}

.sectionContainer:has( > .outputsContainer > .outputContainer ~ .outputContainer) > .menuContainer {
  @media (min-width: $breakpoint600) and (max-width: $breakpoint700) {
    top: $actionsMenuLowest;
  }
}

.sectionContainer:has( > .outputsContainer > .outputContainer ~ .outputContainer ~ .outputContainer) > .menuContainer {
  @media (max-width: $breakpoint600) {
    top: $actionsMenuLow;
  }

  @media (min-width: $breakpoint600) and (max-width: $breakpoint1150) {
    top: $actionsMenuLowest;
  }
}

//--------------------------
//Action menu styling

.menuContainer {
  position: fixed;
  top: $actionsMenuLow;
  right: 0;

  z-index: 10;

  @media (min-width: $breakpoint800) {
    top: $actionsMenuHigh;
  }
}

.menu {

  & button {
    border-radius: $border-radius-main;
  }
}

.menuItem {

  > div {
    overflow: visible;
  }
}

//--------------------------
//Excluded arrays styling

.hiddenContainerShow {

  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($grid170, 1fr));
  align-items: stretch;
  gap: 4px;

  & > li > * {
    cursor: pointer;
    width: 100%;
    min-height: 100%;
  }
}

.hiddenContainerHide {
  display: none;
}